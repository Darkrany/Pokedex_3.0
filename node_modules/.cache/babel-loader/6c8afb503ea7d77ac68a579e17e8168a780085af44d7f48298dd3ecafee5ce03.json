{"ast":null,"code":"var _jsxFileName = \"/Users/sat/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from '@tanstack/react-query';\nimport PokedexList from './PokedexList';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getData = () => {\n  const pkmsPerPages = 20;\n  const offset = 0;\n  return fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset).then(res => res.json()).then(data => {\n    const pokemonRequest = data.results.map(pokemon => {\n      const pkmID = pokemon.url.split('/')[6];\n      const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);\n      return {\n        id: pkmID,\n        name: pkmName,\n        url: pokemon.url,\n        img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pkmID + \".png\"\n      };\n    });\n    //       setPokemon(pokemonRequest);\n  });\n};\n\nexport default function Pokedex() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pkmsPerPages, setPkmsPerPages] = useState(20);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['pokemons'],\n    queryFn: getData\n  });\n\n  // if (isLoading) return 'Cargando informacion...'\n\n  // if (error) return 'Ocurrio un error: ' + error.message\n\n  // useEffect(() => {\n  //   const offset = (currentPage - 1) * pkmsPerPages; //Calculamos el indice del primer pokemon en la pagina actual con la resta, despues multiplicamos para mostrar cada pagina\n\n  //   fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       const pokemonRequest = data.results.map((pokemon) => {\n  //           const pkmID = pokemon.url.split('/')[6];\n  //           const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1)\n\n  //           return {\n  //             id: pkmID,\n  //             name: pkmName,\n  //             url: pokemon.url,\n  //             img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+pkmID+\".png\"\n  //           };\n  //       });\n  //       setPokemon(pokemonRequest);\n\n  //     })\n\n  // }, [currentPage, pkmsPerPages]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify({\n        data,\n        isLoading\n      }, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 2\n  }, this);\n}\n_s(Pokedex, \"scjXRUUJbhw0SGinM4N8QxC7NNU=\", false, function () {\n  return [useQuery];\n});\n_c = Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useState","useEffect","QueryClient","QueryClientProvider","useQuery","PokedexList","Pagination","jsxDEV","_jsxDEV","getData","pkmsPerPages","offset","fetch","then","res","json","data","pokemonRequest","results","map","pokemon","pkmID","url","split","pkmName","name","charAt","toUpperCase","substring","id","img","Pokedex","_s","currentPage","setCurrentPage","setPkmsPerPages","isLoading","error","queryKey","queryFn","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sat/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  QueryClient,\n  QueryClientProvider,\n  useQuery,\n} from '@tanstack/react-query'\nimport PokedexList from './PokedexList';\nimport Pagination from './Pagination';\n\n\nconst getData = () => {\n  const pkmsPerPages = 20;\n  const offset = 0;\n  return fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset)\n      .then((res) => res.json())\n      .then((data) => {\n        const pokemonRequest = data.results.map((pokemon) => {\n            const pkmID = pokemon.url.split('/')[6];\n            const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1)\n            \n            return {\n              id: pkmID,\n              name: pkmName,\n              url: pokemon.url,\n              img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+pkmID+\".png\"\n            };\n        });\n  //       setPokemon(pokemonRequest);\n        \n      })\n}\n\nexport default function Pokedex() {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pkmsPerPages, setPkmsPerPages] = useState(20);\n\n  \n  const { isLoading, error, data } = useQuery({\n    queryKey: ['pokemons'],\n    queryFn: getData\n           \n  })\n\n\n// if (isLoading) return 'Cargando informacion...'\n\n// if (error) return 'Ocurrio un error: ' + error.message\n\n  // useEffect(() => {\n  //   const offset = (currentPage - 1) * pkmsPerPages; //Calculamos el indice del primer pokemon en la pagina actual con la resta, despues multiplicamos para mostrar cada pagina\n    \n\n\n  //   fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       const pokemonRequest = data.results.map((pokemon) => {\n  //           const pkmID = pokemon.url.split('/')[6];\n  //           const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1)\n            \n  //           return {\n  //             id: pkmID,\n  //             name: pkmName,\n  //             url: pokemon.url,\n  //             img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+pkmID+\".png\"\n  //           };\n  //       });\n  //       setPokemon(pokemonRequest);\n        \n  //     })\n     \n\n  // }, [currentPage, pkmsPerPages]);\n\n\n  return (\n <div>\n  <pre>\n    {JSON.stringify({data, isLoading}, null, 2)}\n  </pre>\n\n  \n{/* <PokedexList ></PokedexList>\n\n  \n\n  <Pagination \n    currentPage={currentPage} \n    setCurrentPage={setCurrentPage}  \n    pkmsPerPages={pkmsPerPages}\n    setPkmsPerPages={setPkmsPerPages}\n    \n    ></Pagination> */}\n </div>\n  )\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,WAAW,EACXC,mBAAmB,EACnBC,QAAQ,QACH,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,MAAM,GAAG,CAAC;EAChB,OAAOC,KAAK,CAAC,2CAA2C,GAAGF,YAAY,GAAG,UAAU,GAAGC,MAAM,CAAC,CACzFE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;IACd,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,OAAO,IAAK;MACjD,MAAMC,KAAK,GAAGD,OAAO,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC,MAAMC,OAAO,GAAGJ,OAAO,CAACK,IAAI,CAACC,MAAM,EAAE,CAACC,WAAW,EAAE,GAAGP,OAAO,CAACK,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;MAE/E,OAAO;QACLC,EAAE,EAAER,KAAK;QACTI,IAAI,EAAED,OAAO;QACbF,GAAG,EAAEF,OAAO,CAACE,GAAG;QAChBQ,GAAG,EAAE,2EAA2E,GAACT,KAAK,GAAC;MACzF,CAAC;IACL,CAAC,CAAC;IACR;EAEI,CAAC,CAAC;AACR,CAAC;;AAED,eAAe,SAASU,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,YAAY,EAAEyB,eAAe,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAGpD,MAAM;IAAEoC,SAAS;IAAEC,KAAK;IAAErB;EAAK,CAAC,GAAGZ,QAAQ,CAAC;IAC1CkC,QAAQ,EAAE,CAAC,UAAU,CAAC;IACtBC,OAAO,EAAE9B;EAEX,CAAC,CAAC;;EAGJ;;EAEA;;EAEE;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;;EAGA,oBACDD,OAAA;IAAAgC,QAAA,eACChC,OAAA;MAAAgC,QAAA,EACGC,IAAI,CAACC,SAAS,CAAC;QAAC1B,IAAI;QAAEoB;MAAS,CAAC,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAcD;AAGP;AAACd,EAAA,CAjEuBD,OAAO;EAAA,QAMM3B,QAAQ;AAAA;AAAA2C,EAAA,GANrBhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}