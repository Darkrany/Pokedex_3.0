{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from '@tanstack/react-query';\nimport PokedexList from './PokedexList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getData = () => {\n  const pkmsPerPages = 20;\n  const offset = 0;\n  return fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset).then(res => res.json()).then(data => {\n    // Usar map para crear un nuevo arreglo con el ID, el nombre, la URL y la imagen de cada pokemon\n    return data.results.map(pokemon => {\n      const pkmID = pokemon.url.split('/')[6];\n      const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);\n      return {\n        id: pkmID,\n        name: pkmName,\n        url: pokemon.url,\n        img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pkmID + \".png\"\n      };\n    });\n  });\n};\nexport default function Pokedex() {\n  _s();\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [pkmsPerPages, setPkmsPerPages] = useState(20);\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['pokemons'],\n    queryFn: getData\n  });\n  if (isLoading) return 'Cargando...';\n  if (error) return 'Ocurrio un error: ' + error.message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PokedexList, {\n      pokemons: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 2\n  }, this);\n}\n_s(Pokedex, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n_c = Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useState","useEffect","QueryClient","QueryClientProvider","useQuery","PokedexList","jsxDEV","_jsxDEV","getData","pkmsPerPages","offset","fetch","then","res","json","data","results","map","pokemon","pkmID","url","split","pkmName","name","charAt","toUpperCase","substring","id","img","Pokedex","_s","isLoading","error","queryKey","queryFn","message","children","pokemons","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniel/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  QueryClient,\n  QueryClientProvider,\n  useQuery,\n} from '@tanstack/react-query'\nimport PokedexList from './PokedexList';\n\n\n\nconst getData = () => {\n  const pkmsPerPages = 20;\n  const offset = 0;\n  return fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset)\n      .then((res) => res.json())\n      .then((data) => {\n        // Usar map para crear un nuevo arreglo con el ID, el nombre, la URL y la imagen de cada pokemon\n        return data.results.map((pokemon) => {\n          const pkmID = pokemon.url.split('/')[6];\n          const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);\n          return {\n            id: pkmID,\n            name: pkmName,\n            url: pokemon.url,\n            img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+pkmID+\".png\"\n          };\n        });\n      });\n      \n }\n\nexport default function Pokedex() {\n\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [pkmsPerPages, setPkmsPerPages] = useState(20);\n\n  \n  const { isLoading, error, data } = useQuery({\n    \n    queryKey: ['pokemons'],\n    queryFn: getData\n           \n  })\n  if (isLoading) return 'Cargando...'\n\n  if (error) return 'Ocurrio un error: ' + error.message\n\n  return (\n <div>\n\n \n  \n\n <PokedexList pokemons={data} ></PokedexList>\n  {/* <Pagination \n\n    currentPage={currentPage} \n    setCurrentPage={setCurrentPage}  \n    pkmsPerPages={pkmsPerPages}\n    setPkmsPerPages={setPkmsPerPages}\n    \n    ></Pagination>  */}\n </div>\n  )\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,WAAW,EACXC,mBAAmB,EACnBC,QAAQ,QACH,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,MAAM,GAAG,CAAC;EAChB,OAAOC,KAAK,CAAC,2CAA2C,GAAGF,YAAY,GAAG,UAAU,GAAGC,MAAM,CAAC,CACzFE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;IACd;IACA,OAAOA,IAAI,CAACC,OAAO,CAACC,GAAG,CAAEC,OAAO,IAAK;MACnC,MAAMC,KAAK,GAAGD,OAAO,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC,MAAMC,OAAO,GAAGJ,OAAO,CAACK,IAAI,CAACC,MAAM,EAAE,CAACC,WAAW,EAAE,GAAGP,OAAO,CAACK,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;MAC/E,OAAO;QACLC,EAAE,EAAER,KAAK;QACTI,IAAI,EAAED,OAAO;QACbF,GAAG,EAAEF,OAAO,CAACE,GAAG;QAChBQ,GAAG,EAAE,2EAA2E,GAACT,KAAK,GAAC;MACzF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AAEP,CAAC;AAEF,eAAe,SAASU,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEhC;EACA;;EAGA,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEjB;EAAK,CAAC,GAAGX,QAAQ,CAAC;IAE1C6B,QAAQ,EAAE,CAAC,UAAU,CAAC;IACtBC,OAAO,EAAE1B;EAEX,CAAC,CAAC;EACF,IAAIuB,SAAS,EAAE,OAAO,aAAa;EAEnC,IAAIC,KAAK,EAAE,OAAO,oBAAoB,GAAGA,KAAK,CAACG,OAAO;EAEtD,oBACD5B,OAAA;IAAA6B,QAAA,eAKA7B,OAAA,CAACF,WAAW;MAACgC,QAAQ,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAgB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAStC;AAGP;AAACX,EAAA,CAlCuBD,OAAO;EAAA,QAMMzB,QAAQ;AAAA;AAAAsC,EAAA,GANrBb,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}