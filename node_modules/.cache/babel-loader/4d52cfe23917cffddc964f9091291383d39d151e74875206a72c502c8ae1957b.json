{"ast":null,"code":"var _jsxFileName = \"/Users/sat/Documents/GitHub/Pokedex_3.0/src/components/Pokedex.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, useInfiniteQuery } from '@tanstack/react-query';\nimport PokedexList from './PokedexList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pokedex() {\n  _s();\n  const pkmsPerPages = 20;\n  const fetchPokemons = async _ref => {\n    let {\n      pageParam = \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=\" + pkmsPerPages\n    } = _ref;\n    const res = await fetch(pageParam);\n    return res.json();\n  };\n  const {\n    isLoading,\n    error,\n    data,\n    fetchNextPage\n  } = useInfiniteQuery({\n    queryKey: ['pokemons'],\n    queryFn: fetchPokemons,\n    getNextPageParam: lastPage => lastPage.next\n  });\n  if (isLoading) return 'Cargando...';\n  if (error) return 'Ocurrio un error: ' + error.message;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: data === null || data === void 0 ? void 0 : data.pages.map(page => {\n        return page.results.map(pokemon => {\n          const pkmID = pokemon.url.split('/')[6];\n          const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);\n          console.log(pkmID);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchNextPage(),\n      children: \"Cargar m\\xE1s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(Pokedex, \"zUaS5Q541Nrzew58Gnwt7RPPI8Q=\", false, function () {\n  return [useInfiniteQuery];\n});\n_c = Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useQuery","useInfiniteQuery","PokedexList","jsxDEV","_jsxDEV","Fragment","_Fragment","Pokedex","_s","pkmsPerPages","fetchPokemons","_ref","pageParam","res","fetch","json","isLoading","error","data","fetchNextPage","queryKey","queryFn","getNextPageParam","lastPage","next","message","children","pages","map","page","results","pokemon","pkmID","url","split","pkmName","name","charAt","toUpperCase","substring","console","log","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sat/Documents/GitHub/Pokedex_3.0/src/components/Pokedex.js"],"sourcesContent":["import React from 'react'\nimport { useQuery, useInfiniteQuery} from '@tanstack/react-query'\nimport PokedexList from './PokedexList';\n\n\nexport default function Pokedex() {\n\n\n  const pkmsPerPages = 20;\n  \n  const fetchPokemons = async ({ pageParam = \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=\" + pkmsPerPages }) => {\n  \n  const res = await fetch(pageParam);\n  return res.json();\n\n};\n\n\n\nconst { isLoading, error, data, fetchNextPage } = useInfiniteQuery({ \n  queryKey: ['pokemons'],\n  queryFn: fetchPokemons,\n  getNextPageParam: (lastPage) => lastPage.next\n})\n\n\n\n\nif (isLoading) return 'Cargando...'\n\n if (error) return 'Ocurrio un error: ' + error.message\n\n  return (\n\n    <>\n    \n    <div>\n      {/* <pre style={{ backgroundColor: 'white', fontSize: 16}}>{JSON.stringify(data, null, 2)}</pre> */}\n      {data?.pages.map(page => {\n        return page.results.map( (pokemon) =>{\n          const pkmID = pokemon.url.split('/')[6];\n          const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);  \n          console.log(pkmID)\n        })\n\n      })}\n        \n      </div>\n\n       <button onClick={() => fetchNextPage()}>\n        Cargar m√°s\n      </button>\n    \n    </>\n\n\n\n  )\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,gBAAgB,QAAO,uBAAuB;AACjE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAGhC,MAAMC,YAAY,GAAG,EAAE;EAEvB,MAAMC,aAAa,GAAG,MAAAC,IAAA,IAA+F;IAAA,IAAxF;MAAEC,SAAS,GAAG,oDAAoD,GAAGH;IAAa,CAAC,GAAAE,IAAA;IAEhH,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACF,SAAS,CAAC;IAClC,OAAOC,GAAG,CAACE,IAAI,EAAE;EAEnB,CAAC;EAID,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAc,CAAC,GAAGlB,gBAAgB,CAAC;IACjEmB,QAAQ,EAAE,CAAC,UAAU,CAAC;IACtBC,OAAO,EAAEX,aAAa;IACtBY,gBAAgB,EAAGC,QAAQ,IAAKA,QAAQ,CAACC;EAC3C,CAAC,CAAC;EAKF,IAAIR,SAAS,EAAE,OAAO,aAAa;EAElC,IAAIC,KAAK,EAAE,OAAO,oBAAoB,GAAGA,KAAK,CAACQ,OAAO;EAErD,oBAEErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBAEAtB,OAAA;MAAAsB,QAAA,EAEGR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;QACvB,OAAOA,IAAI,CAACC,OAAO,CAACF,GAAG,CAAGG,OAAO,IAAI;UACnC,MAAMC,KAAK,GAAGD,OAAO,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACvC,MAAMC,OAAO,GAAGJ,OAAO,CAACK,IAAI,CAACC,MAAM,EAAE,CAACC,WAAW,EAAE,GAAGP,OAAO,CAACK,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;UAC/EC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;QACpB,CAAC,CAAC;MAEJ,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEI,eAELzC,OAAA;MAAQ0C,OAAO,EAAEA,CAAA,KAAM3B,aAAa,EAAG;MAAAO,QAAA,EAAC;IAEzC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAER;AAMP;AAACrC,EAAA,CAtDuBD,OAAO;EAAA,QAcmBN,gBAAgB;AAAA;AAAA8C,EAAA,GAd1CxC,OAAO;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}