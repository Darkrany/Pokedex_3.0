{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokedexList from './PokedexList';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pokedex() {\n  _s();\n  const [pokemons, setPokemon] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pkmsPerPages, setPkmsPerPages] = useState(20);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const offset = (currentPage - 1) * pkmsPerPages; //Calculamos el indice del primer pokemon en la pagina actual con la resta, despues multiplicamos para mostrar cada pagina\n\n    setLoading(true);\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset).then(res => res.json()).then(data => {\n      const pokemonRequest = data.results.map(pokemon => {\n        const pkmID = pokemon.url.split('/')[6];\n        const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1);\n        return {\n          id: pkmID,\n          name: pkmName,\n          url: pokemon.url,\n          img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pkmID + \".png\"\n        };\n      });\n      setPokemon(pokemonRequest);\n    }).catch(() => setError(true)).finally(() => setLoading(false));\n  }, [currentPage, pkmsPerPages]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se puede obtener informacion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Obteniendo informacion...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(PokedexList, {\n      pokemons: pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      pkmsPerPages: pkmsPerPages,\n      setPkmsPerPages: setPkmsPerPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 2\n  }, this);\n}\n_s(Pokedex, \"9qlhu0nC1kGDT5cnEsboZFz0/Yw=\");\n_c = Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useState","useEffect","PokedexList","Pagination","jsxDEV","_jsxDEV","Pokedex","_s","pokemons","setPokemon","currentPage","setCurrentPage","pkmsPerPages","setPkmsPerPages","error","setError","loading","setLoading","offset","fetch","then","res","json","data","pokemonRequest","results","map","pokemon","pkmID","url","split","pkmName","name","charAt","toUpperCase","substring","id","img","catch","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniel/Documents/GitHub/Pokedex_2.0/src/components/Pokedex.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PokedexList from './PokedexList';\nimport Pagination from './Pagination';\n\nexport default function Pokedex() {\n\n  const [pokemons, setPokemon] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pkmsPerPages, setPkmsPerPages] = useState(20);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n\n  useEffect(() => {\n    const offset = (currentPage - 1) * pkmsPerPages; //Calculamos el indice del primer pokemon en la pagina actual con la resta, despues multiplicamos para mostrar cada pagina\n    \n     setLoading(true);\n\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=' + pkmsPerPages + '&offset=' + offset)\n      .then((res) => res.json())\n      .then((data) => {\n        const pokemonRequest = data.results.map((pokemon) => {\n            const pkmID = pokemon.url.split('/')[6];\n            const pkmName = pokemon.name.charAt().toUpperCase() + pokemon.name.substring(1)\n            \n            return {\n              id: pkmID,\n              name: pkmName,\n              url: pokemon.url,\n              img: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+pkmID+\".png\"\n            };\n        });\n        setPokemon(pokemonRequest);\n        \n      })\n      .catch(() => setError(true) )\n      .finally(() => setLoading(false));\n\n  }, [currentPage, pkmsPerPages]);\n\n  if (error){\n  return <p>No se puede obtener informacion</p>\n}\n  return (\n <div>\n\n  {loading ? (<p>Obteniendo informacion...</p>\n  ) : (\n    <PokedexList pokemons={pokemons}></PokedexList>\n  )}\n  \n\n  <Pagination \n    currentPage={currentPage} \n    setCurrentPage={setCurrentPage}  \n    pkmsPerPages={pkmsPerPages}\n    setPkmsPerPages={setPkmsPerPages}\n    \n    ></Pagination>\n </div>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}